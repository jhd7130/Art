<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Manager"><!-- namespace - 클래스명과 동일 -->
	<!-- id - 메소드명과 동일 -->
	<!-- resultType : row 1줄의 형태를 지정 -->
	<!-- 쿼리 작성 시 ;이 들어가면 실행되지 않음 -->
	<select id="getMList" resultType="hashmap" parameterType="hashmap">
		SELECT * 
		FROM (  SELECT ROW_NUMBER() OVER (ORDER BY USER_NO DESC) AS RNUM, 
		        USER_NO, USER_ID, USER_NICKNAME, PW, NAME,
		        SEX,TO_CHAR(BIRTHDAY) AS BIRTHDAY, PHONE_NO,MAIL,TO_CHAR(JOIN_DATE) AS JOIN_DATE,
		        TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE),BIRTHDAY) / 12) as old
		        FROM USERS
		        WHERE 1=1)
		WHERE RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>

	<select id="getTCnt" resultType="Integer" parameterType="hashmap">
		SELECT COUNT(*)AS CNT
		FROM USERS
		WHERE 1=1
	</select>
	
	<select id="getUser" resultType="hashmap" parameterType="hashmap">
		SELECT NAME, CASE WHEN SEX=0 THEN '남' ELSE '여' END AS SEX
		        ,USER_NO, TO_CHAR(BIRTHDAY) AS BIRTHDAY, PHONE_NO,MAIL,INTRODUCE
				FROM(SELECT NAME, SEX, USER_NO, BIRTHDAY, PHONE_NO, MAIL,INTRODUCE
					    FROM USERS
					    WHERE USER_NO = #{userNo})
	</select>
	
	<select id="getDPList" resultType="hashmap" parameterType="hashmap">
		SELECT P.POST_NO, P.USER_NO, P.CATEGORY_NO, P.TITLE, P.EXPLAIN, P.POST_FILE, P.VISIBILITY,
		        P.VIEWS, P.REGISTER_DATE, P.DEL,
		        CASE WHEN LIKE_CNT IS NULL THEN 0 ELSE LIKE_CNT END AS LIKE_CNT,
		        CASE WHEN COMMENT_CNT IS NULL THEN 0 ELSE COMMENT_CNT END AS COMMENT_CNT,
		        CASE WHEN REPORT_CNT IS NULL THEN 0 ELSE REPORT_CNT END AS REPORT_CNT,
		        CASE WHEN TAG_NAMES IS NULL THEN '없음' ELSE TAG_NAMES END AS TAG_NAME
		FROM POST P LEFT OUTER JOIN (SELECT POST_NO,COUNT(*) AS LIKE_CNT
	                                FROM POST_LIKE
	                                GROUP BY POST_NO)E
	                        ON P.POST_NO = E.POST_NO
	            LEFT OUTER JOIN (SELECT POST_NO, COUNT(COMMENT_NO) AS COMMENT_CNT
	                             FROM COMMENTS
	                             GROUP BY POST_NO
	                             )F
	                        ON P.POST_NO = F.POST_NO
	            LEFT OUTER JOIN (SELECT P.POST_NO,LISTAGG(T.TAG_NAME,',') WITHIN GROUP (ORDER BY P.POST_NO) AS TAG_NAMES
	                                FROM POST_TAG P INNER JOIN TAG T
	                                            ON P.TAG_NO = T.TAG_NO
	                                GROUP BY P.POST_NO) T
	                        ON P.POST_NO = T.POST_NO
	            LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS REPORT_CNT
	                                FROM REPORT
	                                GROUP BY POST_NO
	                                )Y
	                        ON P.POST_NO =Y.POST_NO
		WHERE USER_NO = #{userNo}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
<select id="getPostList" parameterType="hashmap" resultType="hashmap">
		SELECT P.POST_NO, PC.CATEGORY_NAME, P.TITLE, U.USER_NICKNAME AS NICKNAME,
				U.NAME, U.USER_ID, TO_CHAR(P.REGISTER_DATE, 'YY-MM-DD') AS R_DATE,
				P.VIEWS, DECODE(L.CNT, NULL, 0, L.CNT) AS CNT, P.EXPLAIN
		FROM ((POST P LEFT OUTER JOIN USERS U
		           				 ON P.USER_NO = U.USER_NO)
		    LEFT OUTER JOIN POST_CATEGORY PC
		        	   ON P.CATEGORY_NO = PC.CATEGORY_NO)
		    LEFT OUTER JOIN (SELECT P.POST_NO, COUNT(L.POST_NO) AS CNT
		                	FROM POST_LIKE L LEFT OUTER JOIN POST P
		          										 ON L.POST_NO = P.POST_NO 
		               									 GROUP BY P.POST_NO) L
		         		  ON P.POST_NO = L.POST_NO
		WHERE 1 = 1
		<if test="srhYearFlag == 0 or srhYearFlag == 1">
			<choose>
					<when test="srhYearFlag == 0">
						AND TO_CHAR(P.REGISTER_DATE, 'YY') = TO_CHAR(SYSDATE, 'YY')
					</when>
					<when test="srhYearFlag == 1">
						AND TO_CHAR(P.REGISTER_DATE, 'YY') = '20'
					</when>
			</choose>
		</if>
		<if test="searchTxt != null and searchTxt != ''">
			<choose>
				<when test="searchFlag == 0">
					AND TO_CHAR(P.REGISTER_DATE, 'YY') = TO_CHAR(SYSDATE, 'YY')
				</when>
				<when test="searchFlag == 1">
					AND TO_CHAR(P.REGISTER_DATE, 'YY') = '20'
				</when>
				<when test="searchFlag == 2">
					AND P.TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchFlag == 3">
					AND P.EXPLAIN LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchFlag == 4">
					AND U.NAME LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchFlag == 5">
					AND P.POST_NO LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchFlag == 6">
					AND PC.CATEGORY_NAME LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchFlag == 7">
					AND P.TITLE LIKE '%' || #{searchTxt} || '%'
					OR P.EXPLAIN LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchFlag == 8">
					AND TO_CHAR(P.REGISTER_DATE, 'YY') LIKE '%' || #{searchTxt} || '%'
				</when>
			</choose>
		</if>
		<if test="startFlag != null and startFlag != ''
				or endFlag != null and endFlag != ''">
			<choose>
				<when test="startFlag != null and startFlag != ''
						and endFlag == null and endFlag == ''">
				AND P.REGISTER_DATE &gt;= #{startFlag}
				</when>
				<when test="startFlag == null and startFlag == ''
						and endFlag != null and endFlag != ''">
					AND P.REGISTER_DATE &lt;=  #{endFlag}
				</when>
					<when test="startFlag != null and startFlag != ''
						and endFlag != null and endFlag != ''">
					AND P.REGISTER_DATE BETWEEN #{startFlag} AND #{endFlag}
				</when>
			</choose>
		</if>
		ORDER BY P.REGISTER_DATE DESC
	</select>
	
	
	
	
	
	<select id="getUserDetail" parameterType="hashmap" resultType="hashmap">
		SELECT RN.POST_NO, RN.POST_FILE, SUBSTR(RN.POST_FILE, 21) AS POST_UFILE, RN.CATEGORY_NAME, RN.TITLE, RN.REGISTER_DATE,
				RN.EXPLAIN, RN.USER_NICKNAME, RN.PROFILE_IMG_PATH, SUBSTR(RN.PROFILE_IMG_PATH, 21) AS PROFILE_IMG_UPATH, RN.INTRODUCE,
				RN.TAGS, DECODE(RC.COMMENT_CNT, NULL, 0,RC.COMMENT_CNT) AS COMMENT_CNT
		FROM (SELECT P.POST_NO, P.POST_FILE, C.CATEGORY_NAME, P.TITLE, P.REGISTER_DATE, P.EXPLAIN, U.USER_NICKNAME, U.PROFILE_IMG_PATH, U.INTRODUCE, N.TAGS
		        FROM ((POST P INNER JOIN USERS U
		                    		ON P.USER_NO = U.USER_NO) INNER JOIN POST_CATEGORY C
																	ON P.CATEGORY_NO = C.CATEGORY_NO)
				LEFT OUTER JOIN (SELECT PT.POST_NO, LISTAGG(TAG_NAME, ',') WITHIN GROUP(ORDER BY T.TAG_NO) AS TAGS
		                 FROM POST_TAG PT INNER JOIN TAG T
												 ON PT.TAG_NO = T.TAG_NO
												 GROUP BY PT.POST_NO) N
		 		 ON P.POST_NO = N.POST_NO) RN
		 LEFT OUTER JOIN (SELECT POST_NO, COUNT(*) AS COMMENT_CNT
		                   FROM COMMENTS
		                    GROUP BY POST_NO) RC
		                    ON RN.POST_NO = RC.POST_NO
		WHERE RN.POST_NO = #{postNo}
		ORDER BY RN.REGISTER_DATE DESC
	</select>
	
	
	
	
	
</mapper>